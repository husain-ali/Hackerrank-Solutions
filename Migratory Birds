import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the migratoryBirds function below.
    static int migratoryBirds(List<Integer> arr) {
        
        Map<Integer, Integer> migBirds = new HashMap();
        Integer maxCount = 0, max = 0;
        for(int i = 0; i < arr.size(); i++){
            if(!migBirds.containsKey(arr.get(i)))
                migBirds.put(arr.get(i), 1); 
            migBirds.put(arr.get(i), migBirds.get(arr.get(i))+1);
        }
        
        Set birdsSet = migBirds.entrySet();
        Iterator itr = birdsSet.iterator();

        while(itr.hasNext()){
            Map.Entry m = (Map.Entry)itr.next();
            if((Integer)m.getValue()>maxCount){
                maxCount = (Integer) m.getValue();
                max = (Integer) m.getKey();
            }
        }
        return max;

    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        String[] arrItems = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> arr = new ArrayList<>();

        for (int i = 0; i < arrCount; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr.add(arrItem);
        }

        int result = migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
